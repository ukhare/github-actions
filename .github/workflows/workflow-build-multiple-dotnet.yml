name: Build Multiple .NET Projects

on:
  push:
    branches: [ "master", "release" ]

  pull_request:

  workflow_dispatch:
    inputs:
      run_test:
        description: 'Run the test for dotnet-build-action'
        required: true
        default: 'false'

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix based on input
        id: set-matrix
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.run_test }}" == "true" ]]; then
            matrix='[
              {"project-name":"test-app-dotnet-01", "app-dir":"test-projects/test-app-dotnet-01"},
              {"project-name":"test-app-dotnet-02", "app-dir":"test-projects/test-app-dotnet-02"}
            ]'
          else
            matrix='[
              {"project-name":"myapp-app-dotnet-01", "app-dir":"projects/myapp-app-dotnet-01"},
              {"project-name":"my-app-dotnet-02", "app-dir":"projects/my-app-dotnet-02"}
            ]'
          fi

          echo "matrix=$(echo "$matrix" | jq -c .)" >> "$GITHUB_OUTPUT"

  build:
    needs: prepare-matrix
    runs-on: [self-hosted, medium-amd64]
    strategy:
      matrix:
        include: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Create .NET Project - ${{ matrix.project-name }}
        shell: bash
        run: |
          dotnet new console -n "${{ matrix.project-name }}" -o "${{ matrix.app-dir }}"

      - name: Build ${{ matrix.project-name }}
        uses: ./.github/actions/dotnet-build-action
        with:
          project-name: ${{ matrix.project-name }}
          app-dir: ${{ matrix.app-dir }}/${{ matrix.project-name }}.csproj
          build-configuration: Release
          upload_build: true
